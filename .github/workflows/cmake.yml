name: CMake

on:
  push:
    branches:
      - main
      - develop
      - release/*
  pull_request:
    branches:
      - master
      - develop

jobs:
  build_and_test_unixlike:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
        build_type:
          - Release
          - MinSizeRel
        compiler:
          - gcc
          - clang
    steps:
      - uses: actions/checkout@v2
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_C_COMPILER=${{matrix.compiler}}
      - name: Build
        run: cmake --build ${{github.workspace}}/build --parallel 8 --clean-first
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest --output-on-failure

  # Separate job for Windows, as it requires the MSYS installation beforehand
  # Inspired by from https://ariya.io/2020/07/on-github-actions-with-msys2
  build_and_test_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        build_type:
          - Release
          - MinSizeRel
        compiler:
          - gcc
          - clang
        msystem:
          - MINGW32
          - MINGW64
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          install: make
      - name: install the compiler with Msys2
        run: pacman --noconfirm -S mingw-w64-i686-gcc
        if: ${{ (matrix.msystem == 'MINGW32') && (matrix.compiler == 'gcc') }}
      - name: install the compiler with Msys2
        run: pacman --noconfirm -S mingw-w64-x86_64-gcc
        if: ${{ (matrix.msystem == 'MINGW64') && (matrix.compiler == 'gcc') }}
      - name: install the compiler with Msys2
        run: pacman --noconfirm -S mingw-w64-i686-clang
        if: ${{ (matrix.msystem == 'MINGW32') && (matrix.compiler == 'clang') }}
      - name: install the compiler with Msys2
        run: pacman --noconfirm -S mingw-w64-x86_64-clang
        if: ${{ (matrix.msystem == 'MINGW64') && (matrix.compiler == 'clang') }}
      - name: Check the compiler version
        run: ${{ matrix.compiler }} --version
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_C_COMPILER=${{matrix.compiler}}
      - name: Build
        run: cmake --build ${{github.workspace}}/build --parallel 8 --clean-first
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest --output-on-failure
